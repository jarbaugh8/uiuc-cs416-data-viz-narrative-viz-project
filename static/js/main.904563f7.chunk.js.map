{"version":3,"sources":["YearSelector.js","MyChart.js","hooks/useD3.js","App.js","reportWebVitals.js","index.js"],"names":["years","Array","from","val","index","YearSelector","year","setYear","percentMode","setPercentMode","disable","onRadioButtonChange","event","isPercent","target","value","disabled","onChange","style","map","y","undefined","type","name","checked","d3","d3_all","d3_ann","MyChart","data","state","useState","usePercentageDiff","setUsePercentageDiff","selectedLocations","setSelectedLocations","locationColors","setLocationColors","sceneNumber","setSceneNumber","fillColors","console","log","JSON","stringify","manualInputYear","setManualInputYear","offsetYears","myInterval","setMyInterval","height","width","margin","transitionDuration","isInvalidRaw","loc","yr","isInvalid","yDataRaw","offset","parseInt","xDataRaw","yData","xData","infinityToUndefined","d","Infinity","Object","keys","filter","l","locations","useEffect","interval","setInterval","clearInterval","ref","renderChartFn","dependencies","React","useRef","current","useD3","svg","yMin","Math","min","yMax","max","xMin","xMax","scale","scaleLinear","scaleLog","domain","rangeRound","get","default_val","isNaN","x","select","call","g","attr","transition","duration","ease","easePoly","axisBottom","ticks","axisLeft","tooltip","formatData","n","isFinite","toFixed","scatterPoints","selectAll","join","color","on","this","newLocations","newLocationColors","length","html","pointer","labelPrefix","labelPostfix","text","annX","annY","annotationLabel","annotations","note","label","bgPadding","title","subject","radius","radiusPadding","className","dy","dx","makeAnnotations","annotation","notePadding","remove","append","testAnnotations","id","marginRight","marginLeft","display","App","error","setError","dataLoadCount","setDataLoadCount","isLoaded","setIsLoaded","ghgData","setGhgData","gdpData","setGdpData","setData","requiredDataSourceCount","useCsv","url","setter","then","result","c","mergeData","specificData","key","forEach","obj","push","prevValue","parseFloat","toString","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.904563f7.chunk.js","sourcesContent":["const years = Array.from(new Array(58), (val, index) => index + 1960)\n\n\nfunction YearSelector({ year, setYear, percentMode, setPercentMode, disable}) {\n  function onChange(event) {\n    setYear(event.target.value);\n  }\n\n  function onRadioButtonChange(event) {\n    const isPercent = event.target.value == \"Percent\";\n    setPercentMode(isPercent);\n  }\n\n  const value = percentMode ? \"percent\" : \"absolute\";\n  return (\n    <span>\n      <select disabled={disable} onChange={onChange} value={year} style={{\"fontSize\": 32}}>\n       {\n         years.map((y, index) => {\n           return <option key={`year${index}`} value={y} >{y}</option>\n         })\n       }\n      </select>\n      <form disabled=\"true\">\n        <input disabled={percentMode ? disable : undefined} type=\"radio\" name=\"mode_selector\" value=\"Absolute\" onChange={onRadioButtonChange} checked={percentMode ? undefined : \"checked\"} style={{\"fontSize\": 32}} />Per Capita Values<br />\n        <input disabled={percentMode ? undefined : disable} type=\"radio\" name=\"mode_selector\" value=\"Percent\" onChange={onRadioButtonChange} checked={percentMode ? \"checked\" : undefined}/>Percent Change Over 10 Years<br />\n      </form>\n    </span>\n  );\n}\n\nexport default YearSelector;\n","// https://www.pluralsight.com/guides/using-d3.js-inside-a-react-app\n\nimport { useD3 } from './hooks/useD3';\nimport React, { useState, useEffect } from 'react';\nimport YearSelector from './YearSelector';\nimport * as d3_all from 'd3';\nimport * as d3_ann from 'd3-svg-annotation';\n\nconst d3 = {\n  ...d3_all,\n  ...d3_ann\n}\n\nfunction MyChart({ data, state }) {\n  const [usePercentageDiff, setUsePercentageDiff] = useState(false);\n  const [selectedLocations, setSelectedLocations] = useState({});\n  const [locationColors, setLocationColors] = useState({});\n  const [sceneNumber, setSceneNumber] = useState(0);\n  const fillColors = [\"green\", \"blue\", \"red\", \"yellow\", \"orange\", \"purple\"];\n  console.log(`usePercentageDiff: ${usePercentageDiff}`);\n  console.log(`locationColors: ${JSON.stringify(locationColors)}`);\n\n  let { year, setYear, manualInputYear, setManualInputYear } = state;\n  console.log(`year=${year}`);\n  const offsetYears = -10;\n  year = manualInputYear ?? year;\n  const [myInterval, setMyInterval] = useState(undefined);\n\n  const height = 800;\n  const width = 1500;\n  const margin = { top: 150, right: 30, bottom: 80, left: 100 };\n\n  const transitionDuration = 1000;\n\n  const yField = 'ghg'; // total emissions (TODO: convert to per cap...?)\n  const xField = 'gdp_per_cap'; // GDP per cap\n  const undefinedField = 'isInvalidData';\n\n\n  const isInvalidRaw = ((loc, yr) => data?.[loc]?.[yr ?? year]?.[undefinedField] == true);\n  let isInvalid = isInvalidRaw;\n  if (usePercentageDiff) {\n    isInvalid = (loc) => isInvalidRaw(loc,year-offsetYears) || isInvalidRaw(loc,year);\n  }\n  const yDataRaw = ((loc, yr, offset) => {\n    yr = parseInt(yr ?? year);\n    yr += offset ?? 0;\n    if (isInvalid(loc, yr)) {\n      yr = yr++; // Avoid weird transitions\n    }\n    return data?.[loc]?.[yr ?? year]?.[yField] ?? undefined;\n  });\n  const xDataRaw = ((loc, yr, offset) => {\n    yr = parseInt(yr ?? year);\n    yr += offset ?? 0;\n    if (isInvalid(loc, yr)) {\n      yr = yr++; // Avoid weird transitions\n    }\n    return data?.[loc]?.[yr ?? year]?.[xField] ?? undefined;\n  });\n  let yData = yDataRaw;\n  let xData = xDataRaw;\n  function infinityToUndefined(d) {\n    return d == Infinity ? undefined : d;\n  }\n  if (usePercentageDiff) {\n    yData = (d, y) => 100 * (infinityToUndefined(yDataRaw(d, y) / (yDataRaw(d, y, offsetYears)) - 1));\n    xData = (d, y) => 100 * (infinityToUndefined(xDataRaw(d, y) / (xDataRaw(d, y, offsetYears)) - 1));\n  }\n\n  if (!manualInputYear && year > 2017) {\n    setManualInputYear(2017);\n  }\n\n\n  const [locations, _] = useState(\n    Object.keys(data).filter(l => yData(l, 2017) != null && xData(l, 2017) != null && yData(l, 2017) > 0 && xData(l, 2017) > 0)\n  );\n\n  useEffect(() => {\n    console.log(sceneNumber, year);\n    if (sceneNumber === 1 && year < 2017) {\n      if (myInterval == undefined) {\n        const interval = setInterval(() => {\n          setYear(year => year + 10);\n        }, 1000);\n\n        setMyInterval(interval);\n      }\n    } else {\n      if (myInterval) {\n        clearInterval(myInterval);\n        setMyInterval(undefined);\n      }\n    } \n  }, [sceneNumber, year]);\n\n\n  const ref = useD3(\n    (svg) => {\n\n      //const yMin = 1; //Math.min(...locations.map(loc => yData(loc)));\n      //const yMax = 50; // Math.max(...locations.map(loc => yData(loc)));\n      //const xMin = 1; //Math.min(...locations.map(loc => xData(loc)));\n      //const xMax = 200000; //Math.max(...locations.map(loc => xData(loc)));\n      let yMin = Math.min(...locations.map(loc => yData(loc)).filter(d => d));\n      let yMax = Math.max(...locations.map(loc => yData(loc)).filter(d => d));\n      if (usePercentageDiff) {\n        yMin -= 0.025 * (yMax - yMin);\n        yMax += 0.025 * (yMax - yMin);\n      }\n      let xMin = Math.min(...locations.map(loc => xData(loc)).filter(d => d));\n      let xMax = Math.max(...locations.map(loc => xData(loc)).filter(d => d));\n      if (usePercentageDiff) {\n        xMin -= 0.025 * (xMax - xMin);\n        xMax += 0.025 * (xMax - xMin);\n      } else {\n\n      }\n\n      const scale = usePercentageDiff ? d3.scaleLinear : d3.scaleLog;\n\n      const y = scale()\n        .domain([yMin, yMax])\n        .rangeRound([height - margin.bottom, margin.top]);\n\n      const get = function(val, default_val) {\n        if (isNaN(val) || !val) {\n          return default_val;\n        }\n        return val;\n      }\n\n      const getY = (d) => get(y(d), yMin);\n      const getX = (d) => get(x(d), xMin);\n\n      const x = scale()\n        .domain([xMin, xMax])\n        .rangeRound([margin.left, width - margin.right]);\n\n      const yAxis = (g) =>\n        g\n          .attr(\"transform\", `translate(${margin.left},0)`)\n          .style(\"color\", \"steelblue\")\n          .transition()\n          .duration(transitionDuration)\n          .ease(d3.easePoly)\n          .call(d3.axisLeft(y).ticks(null, \"s\"));\n\n      const xAxis = (g) =>\n        g\n          .attr(\"transform\", `translate(0,${height - margin.bottom})`)\n          .style(\"color\", \"steelblue\")\n          .transition()\n          .duration(transitionDuration)\n          .ease(d3.easePoly)\n          .call(d3.axisBottom(x).ticks(null, \"s\"));\n\n      svg.select(\".x-axis\")\n        .call(xAxis);\n      svg.select(\".y-axis\")\n        .call(yAxis);\n\n\n      const tooltip = d3.select(\"#mychart-tooltip\")\n        .style(\"position\", \"absolute\")\n        .style(\"opacity\", 0)\n        .attr(\"class\", \"tooltip\")\n        .style(\"background-color\", \"black\")\n        .style(\"border\", \"solid\")\n        .style(\"border-width\", \"2px\")\n        .style(\"border-radius\", \"5px\")\n        .style(\"padding\", \"5px\")\n        //.style(\"font-size\", \"60%\")\n        .attr(\"position\", \"absolute\"); // ???\n\n      // Used as template:\n      // https://www.d3-graph-gallery.com/graph/interactivity_tooltip.html#template\n      // Three function that change the tooltip when user hover / move / leave a cell\n      var mouseover = function(d) {\n        tooltip\n          .style(\"opacity\", 1)\n        d3.select(this)\n          .style(\"stroke\", \"black\")\n          .style(\"opacity\", 1)\n          .style(\"width\", \"auto\")\n          .style(\"height\", \"auto\")\n      }\n\n      const click = function(event, d) {\n        let newLocations = { ...selectedLocations };\n        newLocations[d] = !selectedLocations[d];\n        setSelectedLocations(newLocations);\n        if (locationColors[d] == undefined) {\n          let newLocationColors = { ...locationColors };\n          newLocationColors[d] = fillColors[Object.keys(locationColors).length % fillColors.length];\n          setLocationColors(newLocationColors);\n        }\n        if (sceneNumber === 0) {\n          setSceneNumber(1);\n        }\n      }\n      console.log(\"ASDF\");\n      console.log(selectedLocations);\n\n      const formatData = (d, n) => {\n        if (!isFinite(d)) {\n          return \"N/A\";\n        }\n        return d.toFixed(n);\n      }\n      var mousemove = function(event, d) {\n        tooltip\n          .html(`Country/Region:\\t${d}<br>GDP per cap:\\t$${formatData(xDataRaw(d), 0)} USD<br>GHG per cap:\\t${formatData(yDataRaw(d), 2)} kt CO2 equiv`)\n          .style(\"left\", (d3.pointer(event)[0]+5) + \"px\")\n          .style(\"top\", (d3.pointer(event)[1]) + \"px\")\n      }\n      var mouseleave = function(d) {\n        tooltip\n          .style(\"opacity\", 0)\n        d3.select(this)\n          .style(\"stroke\", \"none\")\n          .style(\"opacity\", 0.8)\n          .style(\"width\", \"0px\")\n          .style(\"height\", \"0px\")\n      }\n\n\n      const fillColor = (l) => {\n        let color = (isFinite(yData(l)) && isFinite(xData(l))) ? \"white\" : \"gray\";\n        if (selectedLocations[l]) {\n          color = locationColors[l];\n        }\n        return color;\n      };\n\n      const scatterPoints = svg\n        .select(\".plot-area\")\n        .attr(\"fill\", \"steelblue\")\n        .selectAll(\".scatterpoint\")\n        .data(locations)\n        .join(\"circle\");\n\n      function getRadius(d) {\n        if (isInvalid(d)) {\n          return 0;\n        }\n        if (selectedLocations[d]) {\n          return 12;\n        }\n        return 6;\n      }\n\n      scatterPoints\n        .transition()\n        .duration(transitionDuration)\n        .ease(d3.easePoly)\n        .attr(\"class\", \"scatterpoint\")\n        .attr(\"cx\", l => isInvalid(l) ? 0 : getX(xData(l)))\n        .attr(\"cy\", l => isInvalid(l) ? 0 : getY(yData(l)))\n        .attr(\"r\", getRadius)\n        .attr(\"fill\", fillColor);\n      \n      scatterPoints\n        .on(\"mouseover\", mouseover) // NOTE: conflicts with transition\n        .on(\"click\", click)\n        .on(\"mousemove\", mousemove)\n        .on(\"mouseleave\", mouseleave);\n\n      const labelPrefix = usePercentageDiff ? \"% Change \" : \"\"\n      const labelPostfix = usePercentageDiff ? ` (last ${-offsetYears} years)` : \"\"\n\n      // Add axis labels\n      svg\n        .select(\".x-label\")\n        .attr(\"text-anchor\", \"end\")\n        .attr(\"x\", width/2 + 190)\n        .attr(\"y\", height-10)\n        .style(\"fill\", \"white\")\n        .attr(\"font-size\", 20)\n        .text(labelPrefix + \"GDP per capita, inflation-adjusted (dollars)\" + labelPostfix);\n\n      // Add axis labels\n      const yAxisX = 20;\n      const yAxisY = height / 2 - 220;\n      svg\n        .select(\".y-label\")\n        .attr(\"text-anchor\", \"end\")\n        .attr(\"x\", yAxisX)\n        .attr(\"y\", yAxisY)\n        .style(\"fill\", \"white\")\n        .attr(\"font-size\", 20)\n        .attr(\"transform\", `rotate(-90, ${yAxisX}, ${yAxisY})`)\n        .text(labelPrefix + \"Greenhouse gas emissions per capita, CO2 kt equivalent\" + labelPostfix);\n\n\n\n\n      function testAnnotations() {\n        const annX = x(xData(\"Qatar\"));\n        const annY = y(yData(\"Qatar\"));\n        const releventLocation = \"Qatar\";\n        const type = d3.annotationLabel\n        const annotations = [{\n          note: {\n            label: \"Longer text to show text wrapping\",\n            bgPadding: 20,\n            title: \"Annotations :)\"\n          },\n          subject: { radius: 12, radiusPadding: 10 },\n          //can use x, y directly instead of data\n          className: \"show-bg\",\n          x: annX,\n          y: annY,\n          dy: -75,\n          dx: -75\n        }]\n\n        const makeAnnotations = d3.annotation()\n          //also can set and override in the note.padding property\n          //of the annotation object\n          .notePadding(15)\n          .type(type)\n          //accessors & accessorsInverse not needed\n          //if using x, y in annotations JSON\n          //.accessors({\n          //  x: d => getX(xData(d)),\n          //  y: d => getY(yData(d)),\n          //})\n          .annotations(annotations)\n\n        d3.select(\"svg\").selectAll(\".annotation\").remove();\n        d3.select(\"svg\")\n          .append(\"g\")\n          .attr(\"class\", \".annotation\")\n          .attr(\"class\", \"annotation-group\")\n          .call(makeAnnotations)\n      }\n      testAnnotations();\n    },\n    [year, usePercentageDiff, selectedLocations, locationColors, sceneNumber] // NOTE: Assumes data is forever constant\n  );\n\n  return (\n    <div style={{\"width\": \"100%\", \"height\": \"100%\"}}>\n      <div style={{\"width\": \"100%\", \"height\": \"100%\"}} id=\"mychart-container\">\n        <svg\n          ref={ref}\n          style={{\n            height: height + \"px\",\n            width: width + \"px\",\n            marginRight: \"0px\",\n            marginLeft: \"0px\",\n          }}\n          display=\"block\"\n          margin=\"auto\"\n        >\n          <g className=\"plot-area\" />\n          <g className=\"x-axis\" />\n          <g className=\"y-axis\" />\n          <g className=\"annotation\" />\n          <text className=\"x-label\" />\n          <text className=\"y-label\" />\n        </svg>\n        <div id=\"mychart-tooltip\" />\n      </div>\n      <YearSelector year={year} setYear={setManualInputYear} percentMode={usePercentageDiff} setPercentMode={setUsePercentageDiff} disable={sceneNumber < 2} />\n    </div>\n  );\n}\n\nexport default MyChart;\n","// https://www.pluralsight.com/guides/using-d3.js-inside-a-react-app\nimport React from 'react';\nimport * as d3 from 'd3';\n\nexport const useD3 = (renderChartFn, dependencies) => {\n    const ref = React.useRef();\n\n    React.useEffect(() => {\n        renderChartFn(d3.select(ref.current));\n        return () => {};\n      }, dependencies);\n    return ref;\n}\n","import React, { useState, useEffect } from 'react';\nimport MyChart from './MyChart';\nimport './App.css';\nimport * as d3 from 'd3';\n\nfunction App() {\n\n  const [error, setError] = useState(null);\n  const [dataLoadCount, setDataLoadCount] = useState(0);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [ghgData, setGhgData] = useState([]);\n  const [gdpData, setGdpData] = useState([]);\n  const [data, setData] = useState({});\n  const [manualInputYear, setManualInputYear] = useState(undefined);\n  const [year, setYear] = useState(manualInputYear ?? 1960);\n  let requiredDataSourceCount = 0;\n\n  function useCsv(url, setter) {\n    requiredDataSourceCount++;\n\n    useEffect(() => {\n      d3.csv(url)\n        .then(\n          (result) => {\n            setter(result);\n            setDataLoadCount((c) => c+1);\n          },\n          (error) => {\n            setError(error);\n          }\n        );\n    }, []);\n  }\n  useCsv(\"data/API_NY.GDP.PCAP.CD_DS2_en_csv_v2_2708431.csv\", setGdpData);\n  useCsv(\"data/API_EN.ATM.CO2E.PC_DS2_en_csv_v2_2708833.csv\", setGhgData);\n\n  useEffect(() => {\n    if (requiredDataSourceCount !== dataLoadCount) {\n      return;\n    }\n\n    // All our data has been loaded. Let's preprocess it.\n    const data = {};\n\n    function mergeData(specificData, key) {\n      specificData.forEach((obj) => {\n        const years = [];\n        for (var y = 1960; y <= 2020; y++) {\n          years.push(y);\n        }\n        let prevValue = undefined;\n        years.forEach(year => {\n          const loc = obj['Country Name'];\n          let value = parseFloat(obj[year]);\n          if (!(loc in data)) {\n            data[loc] = {};\n          }\n          if (!(year in data[loc])) {\n            data[loc][year] = {};\n          }\n          if (isNaN(value) || value <= 0) {\n            value = prevValue ?? 0; // use previous years data if missing\n            data[loc][year][\"isInvalidData\"] = true;\n          }\n          prevValue = value;\n          data[loc][year][key] = value;\n        });\n      });\n    }\n\n\n    mergeData(ghgData, 'ghg');\n    mergeData(gdpData, 'gdp_per_cap');\n\n    setData(data);\n\n    setIsLoaded(true);\n  }, [dataLoadCount]);\n\n  if (!isLoaded) {\n    return (\n      <div>\n        Loading...\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div>\n        { error.toString() }\n      </div>\n    );\n  }\n\n  const state = {manualInputYear, setManualInputYear, year, setYear};\n\n  return (\n    <div style={{\"width\": \"100%\", \"height\": \"100%\"}} className=\"App\">\n      <header style={{\"width\": \"100%\", \"height\": \"100%\"}} className=\"App-header\">\n        <MyChart data={data} state={state} />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}